package shiroexploit

import (
	"goexploit/modules/common"
	"goexploit/modules/shiroexploit/common"
	"strings"
)

type ShiroTargets struct {
	Targets []string
	Results []*shiroexploit.Result
}

func Exploit() {
	var S ShiroTargets
	var Targets = make([]string, 0)
	if common.Args.Multi {
		Targets = common.GetData(common.Args.Files)
	} else {
		Targets = append(Targets, common.Args.Target)
	}
	S.Targets = Targets
	S.Results = make([]*shiroexploit.Result, 0)
	for _, v := range S.Targets {
		common.Args.WG.Add(1)
		go check(v, &S)
	}
	common.Args.WG.Wait()
}
func check(target string, S *ShiroTargets) {
	defer common.Args.WG.Done()
	defer func() { <-common.Args.CH }()
	url := target
	if !strings.Contains(target, "http://") {
		url = "http://" + target
	}
	common.Args.CH <- 0
	if shiroexploit.ShiroCheck(url) {
		r := shiroexploit.KeyCheck(url)
		if r != nil {
			S.Results = append(S.Results, r)
		}
	}
}
