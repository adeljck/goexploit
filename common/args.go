package common

import (
	"flag"
	"sync"
)

var Args = new(ArgsStruct)

type ArgsStruct struct {
	Files     string
	Target    string
	Proxy     string
	Ports     string
	Multi     bool
	MultiSize int
	TimeOut   int
	UA        string
	Module    string
	Cmd       string
	CH        chan int
	WG        sync.WaitGroup
	Exploit   bool
}

func (A *ArgsStruct) initArgs() {
	flag.StringVar(&A.Files, "f", "targets.txt", "for multi-target scan")
	flag.StringVar(&A.Ports, "P", "0-65535", "multi port default:0-65535")
	flag.IntVar(&A.MultiSize, "S", 100, "multi scan size")
	flag.StringVar(&A.Target, "u", "", "single target scan")
	flag.StringVar(&A.Proxy, "p", "", "set up http proxy e.g. http://127.0.0.1:8080")
	flag.BoolVar(&A.Multi, "m", false, "[must have]use -m set scan mode(single or multi)")
	flag.BoolVar(&A.Exploit, "e", false, "got exploit")
	flag.IntVar(&A.TimeOut, "t", 5, "request timeout")
	flag.StringVar(&A.UA, "x", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36", "set user-agent")
	flag.StringVar(&A.Module, "M", "shiro", "set the vuln to scan")
	flag.StringVar(&A.Cmd, "C", "whoami", "command for exp to run")
	flag.Parse()
	A.CH = make(chan int, A.MultiSize)
}
func InitArgs() {
	Args.initArgs()
}
